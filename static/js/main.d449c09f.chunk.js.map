{"version":3,"sources":["pb/garage_opener_pb.js","pb/garage_opener_grpc_web_pb.js","withGarageOpenerContext.js","DoorStatusView.js","withSnackbar.js","RelayButton.js","OpenCloseForm.js","SetupDialog.js","App.js","serviceWorker.js","index.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","garageopener","Empty","opt_data","Message","initialize","this","inherits","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","obj","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","ChangeDoorStateRequest","password","getFieldWithDefault","value","readString","setPassword","f","getPassword","length","writeString","setProto3StringField","ChangeDoorStateResponse","success","readBool","setSuccess","getSuccess","writeBool","setProto3BooleanField","DoorState","state","readEnum","setState","getState","writeEnum","State","OPENED","CLOSED","UNKNOWN","setProto3EnumField","object","extend","exports","grpc","web","GarageOpenerClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","GarageOpenerPromiseClient","methodDescriptor_GarageOpener_GetGarageDoorState","MethodDescriptor","MethodType","SERVER_STREAMING","request","AbstractClientBase","MethodInfo","getGarageDoorState","metadata","serverStreaming","methodDescriptor_GarageOpener_ChangeDoorState","UNARY","changeDoorState","callback","rpcCall","unaryCall","module","GarageOpenerContext","React","createContext","garageOpenerService","withGarageOpenerContext","WrappedComponent","props","Consumer","garageOpenerContext","useStatusDisplayStyles","makeStyles","root","width","icon","fontSize","StatusDisplay","doorStatus","classes","doorStateInfo","Clear","text","Check","HelpOutline","Grid","container","className","direction","alignItems","item","Typography","variant","component","DoorStatusView","useState","stream","setStream","UNKOWN","setDoorStatus","useEffect","on","response","setupStream","params","deadline","Date","setSeconds","getSeconds","newStream","getTime","status","console","log","code","details","err","error","setTimeout","end","SnackbarContext","setSnackbarOpts","useStyles","RelayButton","snackbarContext","propClasses","onClick","a","changeDoorStateRequest","Promise","resolve","reject","res","then","open","severity","catch","callDoorChangeEndpoint","Button","clsx","color","buttonGrid","button","passwordOnChange","event","target","OpenCloseForm","spacing","TextField","required","label","type","autoComplete","onChange","onIPChange","setIpAddress","onPortChange","setPort","SetupDialog","setOpen","values","setValues","ip","port","handleClose","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","autoFocus","margin","defaultValue","fullWidth","DialogActions","theme","marginTop","menuButton","marginRight","useGarageOpenerIpState","createPersistedState","useGarageOpenerPortState","Alert","elevation","handleSnackbarClose","setSnackbarOpt","_event","reason","handleSetupValueUpdate","setGarageOpenerIp","setGarageOpenerPort","setGarageOpenerContextState","undefined","App","setupDialogOpen","setSetupDialogOpen","garageOpenerIp","garageOpenerPort","anchorEl","setAnchorEl","snackbarOpts","snackbarProviderState","garageOpenerContextState","Fragment","Provider","AppBar","position","Toolbar","IconButton","edge","currentTarget","Menu","keepMounted","Boolean","MenuItem","ListItemIcon","Settings","ListItemText","primary","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","window","location","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d449c09f.chunk.js","sourcesContent":["/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.garageopener.ChangeDoorStateRequest', null, global);\ngoog.exportSymbol('proto.garageopener.ChangeDoorStateResponse', null, global);\ngoog.exportSymbol('proto.garageopener.DoorState', null, global);\ngoog.exportSymbol('proto.garageopener.DoorState.State', null, global);\ngoog.exportSymbol('proto.garageopener.Empty', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.garageopener.Empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.garageopener.Empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.garageopener.Empty.displayName = 'proto.garageopener.Empty';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.garageopener.Empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.garageopener.Empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.garageopener.Empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.garageopener.Empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.garageopener.Empty}\n */\nproto.garageopener.Empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.garageopener.Empty;\n  return proto.garageopener.Empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.garageopener.Empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.garageopener.Empty}\n */\nproto.garageopener.Empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.garageopener.Empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.garageopener.Empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.garageopener.Empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.garageopener.Empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.garageopener.ChangeDoorStateRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.garageopener.ChangeDoorStateRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.garageopener.ChangeDoorStateRequest.displayName = 'proto.garageopener.ChangeDoorStateRequest';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.garageopener.ChangeDoorStateRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.garageopener.ChangeDoorStateRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.garageopener.ChangeDoorStateRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.garageopener.ChangeDoorStateRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    password: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.garageopener.ChangeDoorStateRequest}\n */\nproto.garageopener.ChangeDoorStateRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.garageopener.ChangeDoorStateRequest;\n  return proto.garageopener.ChangeDoorStateRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.garageopener.ChangeDoorStateRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.garageopener.ChangeDoorStateRequest}\n */\nproto.garageopener.ChangeDoorStateRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.garageopener.ChangeDoorStateRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.garageopener.ChangeDoorStateRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.garageopener.ChangeDoorStateRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.garageopener.ChangeDoorStateRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string password = 1;\n * @return {string}\n */\nproto.garageopener.ChangeDoorStateRequest.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.garageopener.ChangeDoorStateRequest.prototype.setPassword = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.garageopener.ChangeDoorStateResponse = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.garageopener.ChangeDoorStateResponse, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.garageopener.ChangeDoorStateResponse.displayName = 'proto.garageopener.ChangeDoorStateResponse';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.garageopener.ChangeDoorStateResponse.prototype.toObject = function(opt_includeInstance) {\n  return proto.garageopener.ChangeDoorStateResponse.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.garageopener.ChangeDoorStateResponse} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.garageopener.ChangeDoorStateResponse.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    success: jspb.Message.getFieldWithDefault(msg, 1, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.garageopener.ChangeDoorStateResponse}\n */\nproto.garageopener.ChangeDoorStateResponse.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.garageopener.ChangeDoorStateResponse;\n  return proto.garageopener.ChangeDoorStateResponse.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.garageopener.ChangeDoorStateResponse} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.garageopener.ChangeDoorStateResponse}\n */\nproto.garageopener.ChangeDoorStateResponse.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSuccess(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.garageopener.ChangeDoorStateResponse.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.garageopener.ChangeDoorStateResponse.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.garageopener.ChangeDoorStateResponse} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.garageopener.ChangeDoorStateResponse.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getSuccess();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bool success = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.garageopener.ChangeDoorStateResponse.prototype.getSuccess = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.garageopener.ChangeDoorStateResponse.prototype.setSuccess = function(value) {\n  jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.garageopener.DoorState = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.garageopener.DoorState, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.garageopener.DoorState.displayName = 'proto.garageopener.DoorState';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.garageopener.DoorState.prototype.toObject = function(opt_includeInstance) {\n  return proto.garageopener.DoorState.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.garageopener.DoorState} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.garageopener.DoorState.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    state: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.garageopener.DoorState}\n */\nproto.garageopener.DoorState.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.garageopener.DoorState;\n  return proto.garageopener.DoorState.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.garageopener.DoorState} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.garageopener.DoorState}\n */\nproto.garageopener.DoorState.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.garageopener.DoorState.State} */ (reader.readEnum());\n      msg.setState(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.garageopener.DoorState.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.garageopener.DoorState.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.garageopener.DoorState} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.garageopener.DoorState.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getState();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.garageopener.DoorState.State = {\n  OPENED: 0,\n  CLOSED: 1,\n  UNKNOWN: 2\n};\n\n/**\n * optional State state = 1;\n * @return {!proto.garageopener.DoorState.State}\n */\nproto.garageopener.DoorState.prototype.getState = function() {\n  return /** @type {!proto.garageopener.DoorState.State} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.garageopener.DoorState.State} value */\nproto.garageopener.DoorState.prototype.setState = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.garageopener);\n","/**\n * @fileoverview gRPC-Web generated client stub for garageopener\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.garageopener = require('./garage_opener_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.garageopener.GarageOpenerClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.garageopener.GarageOpenerPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.garageopener.Empty,\n *   !proto.garageopener.DoorState>}\n */\nconst methodDescriptor_GarageOpener_GetGarageDoorState = new grpc.web.MethodDescriptor(\n  '/garageopener.GarageOpener/GetGarageDoorState',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.garageopener.Empty,\n  proto.garageopener.DoorState,\n  /**\n   * @param {!proto.garageopener.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.garageopener.DoorState.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.garageopener.Empty,\n *   !proto.garageopener.DoorState>}\n */\nconst methodInfo_GarageOpener_GetGarageDoorState = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.garageopener.DoorState,\n  /**\n   * @param {!proto.garageopener.Empty} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.garageopener.DoorState.deserializeBinary\n);\n\n\n/**\n * @param {!proto.garageopener.Empty} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.garageopener.DoorState>}\n *     The XHR Node Readable Stream\n */\nproto.garageopener.GarageOpenerClient.prototype.getGarageDoorState =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/garageopener.GarageOpener/GetGarageDoorState',\n      request,\n      metadata || {},\n      methodDescriptor_GarageOpener_GetGarageDoorState);\n};\n\n\n/**\n * @param {!proto.garageopener.Empty} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.garageopener.DoorState>}\n *     The XHR Node Readable Stream\n */\nproto.garageopener.GarageOpenerPromiseClient.prototype.getGarageDoorState =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/garageopener.GarageOpener/GetGarageDoorState',\n      request,\n      metadata || {},\n      methodDescriptor_GarageOpener_GetGarageDoorState);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.garageopener.ChangeDoorStateRequest,\n *   !proto.garageopener.ChangeDoorStateResponse>}\n */\nconst methodDescriptor_GarageOpener_ChangeDoorState = new grpc.web.MethodDescriptor(\n  '/garageopener.GarageOpener/ChangeDoorState',\n  grpc.web.MethodType.UNARY,\n  proto.garageopener.ChangeDoorStateRequest,\n  proto.garageopener.ChangeDoorStateResponse,\n  /**\n   * @param {!proto.garageopener.ChangeDoorStateRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.garageopener.ChangeDoorStateResponse.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.garageopener.ChangeDoorStateRequest,\n *   !proto.garageopener.ChangeDoorStateResponse>}\n */\nconst methodInfo_GarageOpener_ChangeDoorState = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.garageopener.ChangeDoorStateResponse,\n  /**\n   * @param {!proto.garageopener.ChangeDoorStateRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.garageopener.ChangeDoorStateResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.garageopener.ChangeDoorStateRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.garageopener.ChangeDoorStateResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.garageopener.ChangeDoorStateResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.garageopener.GarageOpenerClient.prototype.changeDoorState =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/garageopener.GarageOpener/ChangeDoorState',\n      request,\n      metadata || {},\n      methodDescriptor_GarageOpener_ChangeDoorState,\n      callback);\n};\n\n\n/**\n * @param {!proto.garageopener.ChangeDoorStateRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.garageopener.ChangeDoorStateResponse>}\n *     A native promise that resolves to the response\n */\nproto.garageopener.GarageOpenerPromiseClient.prototype.changeDoorState =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/garageopener.GarageOpener/ChangeDoorState',\n      request,\n      metadata || {},\n      methodDescriptor_GarageOpener_ChangeDoorState);\n};\n\n\nmodule.exports = proto.garageopener;\n\n","import React from 'react';\nimport { GarageOpenerClient } from './pb/garage_opener_grpc_web_pb';\n\nexport const GarageOpenerContext = React.createContext({\n  garageOpenerService: new GarageOpenerClient('http://192.168.1.22:8080'),\n});\n\nexport function withGarageOpenerContext(WrappedComponent) {\n  return (props) => (\n    <GarageOpenerContext.Consumer>\n      { \n        garageOpenerContext => (\n          <WrappedComponent garageOpenerContext={garageOpenerContext} {...props} />\n        )\n      }\n    </GarageOpenerContext.Consumer>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Grid, makeStyles, Typography } from '@material-ui/core';\nimport { Check, Clear, HelpOutline } from '@material-ui/icons';\nimport { Empty, DoorState } from './pb/garage_opener_pb';\nimport { withGarageOpenerContext } from './withGarageOpenerContext';\n\nconst useStatusDisplayStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n  },\n  icon: {\n    fontSize: '20em',\n  },\n}));\n\nfunction StatusDisplay(props) {\n  const { doorStatus } = props;\n  const classes = useStatusDisplayStyles();\n\n  const doorStateInfo = {\n    [DoorState.State.OPENED]: {\n      icon: Clear,\n      text: 'Closed',\n    },\n    [DoorState.State.CLOSED]: {\n      icon: Check,\n      text: 'Open',\n    },\n  }[doorStatus] || {\n    icon: HelpOutline,\n    text: 'Unknown',\n  };\n\n  return (\n    <Grid\n      container\n      className={classes.root}\n      direction=\"column\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <doorStateInfo.icon\n          classes={{ root: classes.icon }}\n        />\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h2\" component=\"h2\">\n          { doorStateInfo.text }\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nfunction setupStream(params) {\n  const { garageOpenerService, setStream } = params;\n  const deadline = new Date();\n  deadline.setSeconds(deadline.getSeconds() + 100000);\n  const newStream = garageOpenerService.getGarageDoorState(new Empty(), { deadline: deadline.getTime() });\n\n  newStream.on('status', function(status) {\n    console.log(status.code);\n    console.log(status.details);\n    console.log(status.metadata);\n  });\n  newStream.on('error', function(err) {\n    console.error(err);\n\n    // Wait a second and try again\n    setTimeout(() => {\n      setupStream(params);\n    }, 1000);\n  })\n  newStream.on('end', function(end) {\n    // stream end signal\n    console.log('end');\n  });\n\n  setStream(newStream);\n}\n\nfunction Content(props) {\n  const { garageOpenerContext: { garageOpenerService } } = props;\n\n  const [ stream, setStream ] = useState(null);\n  const [ doorStatus, setDoorStatus ] = useState(DoorState.State.UNKOWN);\n\n  // Configure stream to update door status when we detect a change\n  useEffect(() => {\n    if (stream) {\n      stream.on('data', function(response) {\n        if (doorStatus !== response.getState()) {\n          setDoorStatus(response.getState());\n        }\n      })\n    }\n  }, [stream, doorStatus])\n\n  // Create new stream on initial load\n  useEffect(() => {\n    setupStream({ garageOpenerService, setStream });\n  }, [garageOpenerService]);\n\n  return (\n    <StatusDisplay\n      doorStatus={doorStatus}\n    />\n  );\n}\n\nexport const DoorStatusView = withGarageOpenerContext(Content);\n","import React from 'react';\n\nexport const SnackbarContext = React.createContext({\n  setSnackbarOpts: () => {},\n});\n\nexport function withSnackbar(WrappedComponent) {\n  return (props) => (\n    <SnackbarContext.Consumer>\n      { \n        snackbarContext => (\n          <WrappedComponent snackbarContext={snackbarContext} {...props} />\n        )\n      }\n    </SnackbarContext.Consumer>\n  )\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { ChangeDoorStateRequest } from './pb/garage_opener_pb';\nimport { withGarageOpenerContext } from './withGarageOpenerContext';\nimport { withSnackbar } from './withSnackbar';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n}));\n\nfunction callDoorChangeEndpoint({ snackbarContext, garageOpenerContext, password }) {\n  return async function() {\n    const { garageOpenerService } = garageOpenerContext;\n    const { setSnackbarOpts } = snackbarContext;\n\n    const changeDoorStateRequest = new ChangeDoorStateRequest();\n    changeDoorStateRequest.setPassword(password);\n\n    return new Promise((resolve, reject) => {\n      garageOpenerService.changeDoorState(changeDoorStateRequest, null, (err, res) => {\n        if (err) {\n          reject(err);\n        } else {\n          console.log('Response', res);\n          resolve(res)\n        }\n      })\n    })\n      .then(() => {\n        setSnackbarOpts({\n          open: true,\n          message: 'Door has been updated!',\n          severity: 'success',\n        });\n      })\n      .catch(err => {\n        setSnackbarOpts({\n          open: true,\n          message: err.message,\n          severity: 'error',\n        });\n      });\n  }\n}\n\nfunction Content(props) {\n  const { snackbarContext, garageOpenerContext, password, classes: propClasses } = props;\n  const classes = useStyles();\n\n  const onClick = callDoorChangeEndpoint({\n    snackbarContext,\n    garageOpenerContext,\n    password,\n  });\n\n  return (\n    <Button\n      className={clsx(propClasses.root, classes.root)}\n      onClick={onClick}\n      variant=\"contained\"\n      color=\"primary\">\n      Open/Close\n    </Button>\n  )\n}\n\nexport const RelayButton = withSnackbar(\n  withGarageOpenerContext(\n    Content,\n  ),\n);\n","import React, { useState } from 'react';\nimport { Grid, TextField, makeStyles } from '@material-ui/core';\nimport { RelayButton } from './RelayButton';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  buttonGrid: {\n    width: '100%'\n  },\n  button: {\n    width: '100%'\n  }\n}));\n\nfunction passwordOnChange({ setPassword }) {\n  return function(event) {\n    setPassword(event.target.value);\n  };\n}\n\nexport function OpenCloseForm(props) {\n  const classes = useStyles();\n\n  const [password, setPassword] = useState('');\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      spacing={2}\n    >\n      <Grid\n        item\n      >\n        <TextField\n          required\n          label=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          autoComplete=\"current-password\"\n          onChange={passwordOnChange({ setPassword })}\n        />\n      </Grid>\n      <Grid\n        item\n        className={classes.buttonGrid}\n      >\n        <RelayButton\n          classes={{ root: classes.button }}\n          password={password}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Button } from '@material-ui/core';\n\nfunction onIPChange({ setIpAddress }) {\n  return function(event) {\n    setIpAddress(event.target.value);\n  }\n}\n\nfunction onPortChange({ setPort }) {\n  return function(event) {\n    setPort(event.target.value);\n  };\n}\n\nexport function SetupDialog(props) {\n  const { open, setOpen, values, setValues } = props;\n\n  const [ip, setIpAddress] = useState('');\n  const [port, setPort] = useState('');\n\n  const handleClose = () => {\n    setOpen(false);\n  }\n\n  const handleCloseAndSave = () => {\n    setValues({ ip, port });\n    handleClose();\n  }\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>\n        Setup\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          To enable communication to the garage opener, enter it's IP address in the below text box\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"IP Address\"\n          defaultValue={values.ip}\n          fullWidth\n          onChange={onIPChange({ setIpAddress })}\n        />\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"Port\"\n          defaultValue={values.port}\n          fullWidth\n          onChange={onPortChange({ setPort })}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleCloseAndSave} color=\"primary\">\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState } from 'react';\nimport createPersistedState from 'use-persisted-state';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Grid, Snackbar, Toolbar, IconButton, Menu, MenuItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { Menu as MenuIcon, Settings } from '@material-ui/icons';\nimport { Alert as MuiAlert } from '@material-ui/lab';\nimport { DoorStatusView } from './DoorStatusView';\nimport { OpenCloseForm } from './OpenCloseForm';\nimport { SnackbarContext } from './withSnackbar';\nimport { SetupDialog } from './SetupDialog';\nimport { GarageOpenerContext } from './withGarageOpenerContext';\nimport { GarageOpenerClient } from './pb/garage_opener_grpc_web_pb';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '1em',\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n}));\n\nconst useGarageOpenerIpState = createPersistedState('garageOpenerIp');\nconst useGarageOpenerPortState = createPersistedState('garageOpenerPort');\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction handleSnackbarClose(setSnackbarOpt) {\n  return function(_event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnackbarOpt({ open: false });\n  };\n}\n\nfunction handleSetupValueUpdate({ setGarageOpenerIp, setGarageOpenerPort, setGarageOpenerContextState }) {\n  return function({ ip, port }) {\n    setGarageOpenerIp(ip);\n    setGarageOpenerPort(port);\n    setGarageOpenerContextState({\n      garageOpenerService: (ip && port) ? new GarageOpenerClient(`http://${ip}:${port}`) : undefined,\n    });\n  };\n}\n\nfunction App() {\n  const classes = useStyles();\n\n  const [setupDialogOpen, setSetupDialogOpen] = useState(false);\n  const [garageOpenerIp, setGarageOpenerIp] = useGarageOpenerIpState(null);\n  const [garageOpenerPort, setGarageOpenerPort] = useGarageOpenerPortState(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [snackbarOpts, setSnackbarOpts] = useState({ open: false });\n\n  // App probably isn't going to change the setSnackbarOpts, but if we need to add\n  // additional here we might want to determine a different solution for providing this\n  // context value. Wanted to avoid https://reactjs.org/docs/context.html#caveats in regards\n  // to a new object being created everytime\n  const [snackbarProviderState] = useState(() => ({ setSnackbarOpts }));\n  const [garageOpenerContextState, setGarageOpenerContextState] = useState(() => ({\n    garageOpenerService: garageOpenerIp && new GarageOpenerClient(`http://${garageOpenerIp}:${garageOpenerPort}`),\n  }));\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSetupClick = () => {\n    setSetupDialogOpen(true);\n  }\n\n  return (\n    <React.Fragment>\n      <GarageOpenerContext.Provider value={garageOpenerContextState}>\n        <SnackbarContext.Provider value={snackbarProviderState}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                onClick={handleMenuClick}\n                className={classes.menuButton}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleMenuClose}\n              >\n                <MenuItem onClick={handleSetupClick}>\n                  <ListItemIcon>\n                    <Settings fontSize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Setup\"/>\n                </MenuItem>\n              </Menu>\n            </Toolbar>\n          </AppBar>\n          {\n            (garageOpenerIp && garageOpenerPort)\n            ? (\n              <Grid\n                className={classes.root}\n                direction=\"column\"\n                container\n                alignItems=\"center\"\n                spacing={2}\n              >\n                <Grid item>\n                  <DoorStatusView />\n                </Grid>\n                <Grid item>\n                  <OpenCloseForm />\n                </Grid>\n              </Grid>\n            )\n            : null\n          }\n          <SetupDialog\n            open={setupDialogOpen}\n            setOpen={setSetupDialogOpen}\n            values={{\n              ip: garageOpenerIp,\n              port: garageOpenerPort,\n            }}\n            setValues={handleSetupValueUpdate({ setGarageOpenerIp, setGarageOpenerPort, setGarageOpenerContextState })}\n          />\n        </SnackbarContext.Provider>\n      </GarageOpenerContext.Provider>\n\n      <Snackbar\n        anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}\n        open={snackbarOpts.open}\n        autoHideDuration={6000}\n        onClose={handleSnackbarClose(setSnackbarOpts)}\n      >\n        <Alert onClose={handleSnackbarClose(setSnackbarOpts)} severity={snackbarOpts.severity || 'info'}>\n          { snackbarOpts.message }\n        </Alert>\n      </Snackbar>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}